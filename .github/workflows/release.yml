name: Semantic Release

on:
  push:
    branches:
      - main

jobs:
  # CI jobs that must succeed before release
  ci:
    name: Run CI
    uses: ./.github/workflows/ci.yml

  release:
    runs-on: ubuntu-latest
    needs: ci
    concurrency: release
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: |
          uv sync --dev
          uv pip install python-semantic-release build

      - name: Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          uv run python -m semantic_release version --no-vcs-release
          # Check if the version file or pyproject.toml has changed
          git status --porcelain
          # If there are changes, commit them
          if [[ -n $(git status --porcelain) ]]; then
            git add src/minerva/__version__.py pyproject.toml
            VERSION=$(grep -o '".*"' src/minerva/__version__.py | tr -d '"')
            git commit -m "chore(release): update version to $VERSION [skip ci]"
            git push
          fi
          uv run python -m semantic_release publish
